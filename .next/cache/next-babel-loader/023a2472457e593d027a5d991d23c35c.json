{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\Documents\\\\Proyectos\\\\React\\\\dark-mode\\\\src\\\\ContextTheme.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState } from \"react\";\nexport const Context = createContext();\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    0: isDarkMode,\n    1: setIsDarkMode\n  } = useState(() => {\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      return true;\n    } else {\n      false;\n    }\n  });\n  const value = {\n    isDarkMode,\n    setIsDarkMode: () => {\n      setIsDarkMode(!isDarkMode);\n    }\n  };\n  return __jsx(Context.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport default {\n  Provider,\n  Consumer: Context.Consumer\n};","map":{"version":3,"sources":["C:/Users/diego/Documents/Proyectos/React/dark-mode/src/ContextTheme.js"],"names":["React","createContext","useState","Context","Provider","children","isDarkMode","setIsDarkMode","window","matchMedia","matches","value","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAEA,OAAO,MAAMC,OAAO,GAAGF,aAAa,EAA7B;;AAEP,MAAMG,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BL,QAAQ,CAAC,MAAM;AACjD,QAAIM,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAtD,EAA+D;AAC7D,aAAO,IAAP;AACD,KAFD,MAEO;AACL;AACD;AACF,GAN2C,CAA5C;AAQA,QAAMC,KAAK,GAAG;AACZL,IAAAA,UADY;AAEZC,IAAAA,aAAa,EAAE,MAAM;AACnBA,MAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD;AAJW,GAAd;AAMA,SAAO,MAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEK,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCN,QAAjC,CAAP;AACD,CAhBD;;AAkBA,eAAe;AACbD,EAAAA,QADa;AAEbQ,EAAAA,QAAQ,EAAET,OAAO,CAACS;AAFL,CAAf","sourcesContent":["import React, { createContext, useState } from \"react\";\r\n\r\nexport const Context = createContext();\r\n\r\nconst Provider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(() => {\r\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n      return true;\r\n    } else {\r\n      false;\r\n    }\r\n  });\r\n\r\n  const value = {\r\n    isDarkMode,\r\n    setIsDarkMode: () => {\r\n      setIsDarkMode(!isDarkMode);\r\n    },\r\n  };\r\n  return <Context.Provider value={value}>{children}</Context.Provider>;\r\n};\r\n\r\nexport default {\r\n  Provider,\r\n  Consumer: Context.Consumer,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}