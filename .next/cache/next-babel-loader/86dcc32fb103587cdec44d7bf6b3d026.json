{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\Documents\\\\Proyectos\\\\React\\\\dark-mode\\\\src\\\\ContextTheme.js\";\nvar __jsx = React.createElement;\nimport React, { createContext, useState, useEffect } from \"react\";\nexport const Context = createContext();\n\nconst Provider = ({\n  children\n}) => {\n  const {\n    0: isDarkMode,\n    1: setIsDarkMode\n  } = useState(false);\n  useEffect(() => {\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\n      alert(\"Open alert\");\n      setIsDarkMode();\n    }\n  }, []);\n  const value = {\n    isDarkMode,\n    setIsDarkMode: () => {\n      setIsDarkMode(!isDarkMode);\n    }\n  };\n  return __jsx(Context.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, children);\n};\n\nexport default {\n  Provider,\n  Consumer: Context.Consumer\n};","map":{"version":3,"sources":["C:/Users/diego/Documents/Proyectos/React/dark-mode/src/ContextTheme.js"],"names":["React","createContext","useState","useEffect","Context","Provider","children","isDarkMode","setIsDarkMode","window","matchMedia","matches","alert","value","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,OAAO,MAAMC,OAAO,GAAGH,aAAa,EAA7B;;AAEP,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjC,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAAC,KAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,MAAM,CAACC,UAAP,CAAkB,8BAAlB,EAAkDC,OAAtD,EAA+D;AAC7DC,MAAAA,KAAK,CAAC,YAAD,CAAL;AACAJ,MAAAA,aAAa;AACd;AACF,GALQ,EAKN,EALM,CAAT;AAOA,QAAMK,KAAK,GAAG;AACZN,IAAAA,UADY;AAEZC,IAAAA,aAAa,EAAE,MAAM;AACnBA,MAAAA,aAAa,CAAC,CAACD,UAAF,CAAb;AACD;AAJW,GAAd;AAMA,SAAO,MAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEM,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCP,QAAjC,CAAP;AACD,CAjBD;;AAmBA,eAAe;AACbD,EAAAA,QADa;AAEbS,EAAAA,QAAQ,EAAEV,OAAO,CAACU;AAFL,CAAf","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const Context = createContext();\r\n\r\nconst Provider = ({ children }) => {\r\n  const [isDarkMode, setIsDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n      alert(\"Open alert\");\r\n      setIsDarkMode();\r\n    }\r\n  }, []);\r\n\r\n  const value = {\r\n    isDarkMode,\r\n    setIsDarkMode: () => {\r\n      setIsDarkMode(!isDarkMode);\r\n    },\r\n  };\r\n  return <Context.Provider value={value}>{children}</Context.Provider>;\r\n};\r\n\r\nexport default {\r\n  Provider,\r\n  Consumer: Context.Consumer,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}