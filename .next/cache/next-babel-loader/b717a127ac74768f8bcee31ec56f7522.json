{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\Documents\\\\Proyectos\\\\React\\\\dark-mode\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from \"next/app\";\nimport React, { useContext } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport darkTheme from \"../src/themes/dark\";\nimport lightTheme from \"../src/themes/light\";\nimport ThemeContext from \"../src/ContextTheme\";\nexport default class MyApp extends App {\n  render() {\n    const {\n      isDarkMode\n    } = useContext(ThemeContext);\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ThemeProvider, {\n      theme: isDarkMode ? darkTheme : lightTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/diego/Documents/Proyectos/React/dark-mode/pages/_app.js"],"names":["App","React","useContext","ThemeProvider","darkTheme","lightTheme","ThemeContext","MyApp","render","isDarkMode","Component","pageProps","props"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,eAAe,MAAMC,KAAN,SAAoBP,GAApB,CAAwB;AACrCQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiBP,UAAU,CAACI,YAAD,CAAjC;AACA,UAAM;AAAEI,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAEH,UAAU,GAAGL,SAAH,GAAeC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeM,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAToC","sourcesContent":["import App from \"next/app\";\r\nimport React, { useContext } from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport darkTheme from \"../src/themes/dark\";\r\nimport lightTheme from \"../src/themes/light\";\r\nimport ThemeContext from \"../src/ContextTheme\";\r\n\r\nexport default class MyApp extends App {\r\n  render() {\r\n    const { isDarkMode } = useContext(ThemeContext);\r\n    const { Component, pageProps } = this.props;\r\n    return (\r\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\r\n        <Component {...pageProps} />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}