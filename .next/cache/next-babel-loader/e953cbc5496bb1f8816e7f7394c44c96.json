{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\diego\\\\Documents\\\\Proyectos\\\\React\\\\dark-mode\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport App from \"next/app\";\nimport React from \"react\";\nimport { ThemeProvider } from \"styled-components\";\nimport darkTheme from \"../src/themes/dark\";\nimport lightTheme from \"../src/themes/light\";\nexport default class MyApp extends App {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      isDarkMode: () => {\n        return true;\n      }\n    });\n\n    _defineProperty(this, \"changeTheme\", () => {\n      this.setState({\n        isDarkMode: !this.state.isDarkMode\n      });\n    });\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(ThemeProvider, {\n      theme: this.state.isDarkMode ? darkTheme : lightTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, __jsx(Component, _extends({\n      changeTheme: this.changeTheme\n    }, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/diego/Documents/Proyectos/React/dark-mode/pages/_app.js"],"names":["App","React","ThemeProvider","darkTheme","lightTheme","MyApp","isDarkMode","setState","state","render","Component","pageProps","props","changeTheme"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AAEA,eAAe,MAAMC,KAAN,SAAoBL,GAApB,CAAwB;AAAA;AAAA;;AAAA,mCAC7B;AACNM,MAAAA,UAAU,EAAE,MAAM;AAChB,eAAO,IAAP;AACD;AAHK,KAD6B;;AAAA,yCAOvB,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAED,QAAAA,UAAU,EAAE,CAAC,KAAKE,KAAL,CAAWF;AAA1B,OAAd;AACD,KAToC;AAAA;;AAUrCG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,SAAF;AAAaC,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AACA,WACE,MAAC,aAAD;AAAe,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWF,UAAX,GAAwBH,SAAxB,GAAoCC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKS;AAA7B,OAA8CF,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAjBoC","sourcesContent":["import App from \"next/app\";\r\nimport React from \"react\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport darkTheme from \"../src/themes/dark\";\r\nimport lightTheme from \"../src/themes/light\";\r\n\r\nexport default class MyApp extends App {\r\n  state = {\r\n    isDarkMode: () => {\r\n      return true;\r\n    },\r\n  };\r\n\r\n  changeTheme = () => {\r\n    this.setState({ isDarkMode: !this.state.isDarkMode });\r\n  };\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n    return (\r\n      <ThemeProvider theme={this.state.isDarkMode ? darkTheme : lightTheme}>\r\n        <Component changeTheme={this.changeTheme} {...pageProps} />\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}